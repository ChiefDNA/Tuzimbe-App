{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\Tuzimbe\\\\tuzimbe-app\\\\src\\\\pages\\\\Employees.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Employees = ({\n  data\n}) => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const status = data.jobtitle;\n  useEffect(() => {\n    fetch('http://localhost:8000/api/employees/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': \"application/json\"\n      },\n      body: JSON.stringify({\n        jobtitle: status\n      })\n    }).then(response => response.json()).then(data => {\n      setUsers(data);\n      setLoading(false);\n    }).catch(error => {\n      setError(error);\n      setLoading(false);\n    });\n  }, [status]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 16\n    }, this);\n  }\n  const handleRefresh = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/api/employees/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': \"application/json\"\n        },\n        body: JSON.stringify({\n          jobtitle: status\n        })\n      });\n      const data = await response.json();\n      setUsers(data);\n    } catch (error) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"There is no data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 20\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Employee List\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClock: handleRefresh,\n        style: {\n          marginLeft: 10\n        },\n        children: \"Refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(Employees, \"vvG5G9m+JVa2SSWAm277lQVAKio=\");\n_c = Employees;\nexport default Employees;\nvar _c;\n$RefreshReg$(_c, \"Employees\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Employees","data","_s","users","setUsers","loading","setLoading","error","setError","status","jobtitle","fetch","method","headers","body","JSON","stringify","then","response","json","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","message","handleRefresh","onClock","style","marginLeft","map","user","id","username","email","_c","$RefreshReg$"],"sources":["D:/projects/Tuzimbe/tuzimbe-app/src/pages/Employees.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Employees = ( { data } ) => {\r\n    const [users, setUsers] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const status = data.jobtitle;\r\n    useEffect(() => {\r\n        fetch('http://localhost:8000/api/employees/',{\r\n            method:'POST',\r\n            headers: {'Content-Type':\"application/json\"},\r\n            body:JSON.stringify({jobtitle:status}),\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            setUsers(data);\r\n            setLoading(false);\r\n        })\r\n        .catch (error => {\r\n            setError(error);\r\n            setLoading(false);    \r\n        });\r\n    }, [status]);\r\n    if (loading) {\r\n        return <p>Loading...</p>\r\n    }\r\n    if (error){\r\n        return <p>Error: {error.message}</p>\r\n    }\r\n    const handleRefresh = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:8000/api/employees/',{\r\n                method:'POST',\r\n                headers: {'Content-Type':\"application/json\"},\r\n                body:JSON.stringify({jobtitle:status}),\r\n            });\r\n            const data = await response.json();\r\n            setUsers(data);\r\n        }catch (error){\r\n            return <p>There is no data</p>\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>\r\n                Employee List \r\n                <button onClock={handleRefresh} style= {{marginLeft:10}}>\r\n                    Refresh\r\n                </button>\r\n            </h1>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Username</th>\r\n                        <th>Email</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {users.map(user =>(\r\n                        <tr key={user.id}>\r\n                            <td>{user.id}</td>\r\n                            <td>{user.username}</td>\r\n                            <td>{user.email}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Employees;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}